{"openapi":"3.0.3","info":{"title":"Cash App","version":"1.0.0","description":"This is a sample server Petstore server.  You can find out more about Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/). For this sample, you can use the api key `special-key` to test the authorization filters.\n","termsOfService":"http://swagger.io/terms/","contact":{"email":"bourdakos1@gmail.com"},"license":{"name":"Apache 2.0","url":"http://www.apache.org/licenses/LICENSE-2.0.html"},"x-github":"https://github.com/bee-travels"},"paths":{"/access-token":{"post":{"tags":["Client"],"summary":"Access Token","security":[{"clientKey":[]}],"description":"This API generates access tokens to operate on a Cash App user and applies\nto the following scenarios:\n\n1. Takes an Authorization Code obtained through the completion of the authorization flow\nfor a Cash App user. An Access Token (Short Lifetime) + Refresh Token (Permanent until\nrevoked) are provided to the Client App. The access token can be used immediately to perform\nactions on the Cash App user. The refresh token should be securely saved (on the Client Server)\nfor future user actions.\n\n2. Takes a Refresh Token obtained through the previous authorization flow for the Cash App\nuser to generate a new short-lived Access Token. This access token can have limited permissions\nby requesting a subset of scopes from the original authorization flow. Requesting scopes that\nweren't granted on the original authorization flow will result in an unauthorized error.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessTokenRequest"}}},"required":true},"responses":{"200":{"description":"A JSON array of user names","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AccessTokenResponse"}}}}}}},"/authorization":{"post":{"tags":["Client"],"summary":"Authorization","security":[{"clientKey":[]}],"description":"Starts an authorization flow for an existing Cash App customer to grant\naccount permissions. The customer enters the flow by visiting the redirect_url in the\nresponse or scanning the QR image provided by qr_url.\n\nIf the customer approves the request for the scopes specified, they will be directed to\nredirect_uri with an Authorization Code and State in the query parameters to continue the\nflow. The integration retrieves the Authorization Code from the redirect and uses it with\nthe Access Token endpoint below.\n\nOnce the customer has accepted or declined the authorization request, they will be\n[redirected](doc:mobile-redirects) back to the client-specified redirect_uri. A\n[webhook event](doc:webhooks) is also generated if the client server is configured to\nreceive them.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationRequest"}}},"required":true},"responses":{"200":{"description":"Assorted values needed for continuing the authorization process.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/AuthorizationResponse"}}}}}}},"/payment/{payment_id}/capture":{"post":{"tags":["Payment Processing"],"summary":"Capture Payment","security":[{"clientKey":[]}],"description":"This API will capture the payment and return the current snapshot of the payment.\nThis API supports both client and customer authorization headers.","parameters":[{"name":"payment_id","in":"path","description":"a payment id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The payment object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CapturePaymentResponse"}}}}}}},"/merchant":{"post":{"tags":["Merchant Management"],"summary":"Merchant","security":[{"clientKey":[]}],"description":"Creates a new Merchant. Merchants do not have access to Cash App but are\ninstead used to represent a brand and depository account when processing payments from Cash\nApp users. A Cash App-held depository account (in the currency and country) is automatically\ncreated for the Merchant. Processed payments are stored in this account until they are ready\nfor settlement.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantRequest"}}},"required":true},"responses":{"200":{"description":"The newly created merchant object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantResponse"}}}}}},"put":{"tags":["Merchant Management"],"summary":"Merchant","security":[{"clientKey":[]}],"description":"Similar to the Create Merchant API, however this API can either updates or\ncreates a merchant (upsert).","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantRequest"}}},"required":true},"responses":{"200":{"description":"The newly created merchant object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/MerchantResponse"}}}}}}},"/payment":{"post":{"tags":["Payment Processing"],"summary":"Refund","security":[{"clientKey":[]}],"description":"This API will void or refund the payment and return the current snapshot of the\npayment. This API variant requires client authorization.\n\nNOTE: Currently only full refunds are supported.","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundPaymentRequest"}}}},"responses":{"200":{"description":"The payment object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/RefundPaymentResponse"}}}}}},"get":{"tags":["Payment Processing"],"summary":"Payment","security":[{"clientKey":[]}],"description":"This API will return the current snapshot of the payment. This API supports both\nclient and customer authorization headers.","parameters":[{"name":"payment_id","in":"path","description":"a payment id","required":true,"schema":{"type":"string"}}],"responses":{"200":{"description":"The payment object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GetPaymentResponse"}}}}}}},"/customer":{"get":{"tags":["Customer OAuth"],"summary":"Customer","security":[{"accessToken":[]}],"description":"Returns a profile snapshot of a customer based on the access-token used to\nauthenticate the call","responses":{"200":{"description":"The customer object.","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CustomerResponse"}}}}}}}},"components":{"securitySchemes":{"clientKey":{"type":"apiKey","in":"header","name":"Authorization","description":"Prefix the {CLIENT_ID} and {API_KEY} values with \\\"Client\\\" to indicate the custom authorization type","x-default":"Client {CLIENT_ID} {API_KEY}"},"accessToken":{"type":"http","scheme":"bearer"}},"schemas":{"Alias":{"type":"object","properties":{"type":{"type":"string","description":"The type of alias this represents.\nOptions include: CASHTAG, EMAIL, SMS"},"value":{"type":"string","description":"The value of the alias. Phone numbers are in E.164 format."}}},"Customer":{"type":"object","description":"Customers represent Cash App users. They use Cash App on their smartphones for various financial tasks like transferring funds to peers, retail payments, and purchasing of equities.","properties":{"full_name":{"type":"string","description":"The full name of the user"},"country_code":{"type":"string","description":"The ISO 3166-1 alpha-2 code for the country the user is associated to"},"aliases":{"type":"array","description":"A list of all aliases associated to the user.","items":{"$ref":"#/components/schemas/Alias"}},"profile_photo_url":{"type":"string","description":"URL to fetch the user's profile photo"}}},"Merchant":{"type":"object","description":"Merchants do not have access to Cash App but are instead used to represent a brand and depository account when processing payments from Cash App users. A Cash App-held depository account (in the currency and country) is automatically created for the Merchant. Processed payments are stored in this account until they are ready for settlement.","required":["business_name","country_code","currency"],"properties":{"id":{"type":"string","description":"A unique identifier for this merchant"},"business_name":{"type":"string","description":"The customer-facing name of the business"},"country_code":{"type":"string","description":"The alpha-2 code for the country the merchant operates in."},"currency":{"type":"string","description":"The alpha-3 code for the currency the merchant operates with."},"category":{"type":"string","description":"The merchant category code (a four-digit number listed in ISO 18245)."}}},"Refund":{"type":"object","description":"The refund object provides the status of a refund associated to a [payment](doc:payment)","properties":{"id":{"type":"string","description":"A unique identifier for the refund"},"payment_id":{"type":"string","description":"The identifier of the payment this refund is associated to"},"amount":{"type":"string","description":"Smallest divisible unit of currency for a given locale, scaled by the default number of decimal places for the currency.\nExample: 1.00 USD -> 100"},"currency":{"type":"string","description":"The ISO-4217 alpha-3 code for the refund currency"},"state":{"type":"string","description":"The state of this refund.\nOptions include AUTHORIZED, CAPTURED, VOIDED, DECLINED","enum":["AUTHORIZED","CAPTURED","VOIDED","DECLINED"]}}},"Payment":{"type":"object","description":"The payment object provides the payment definition and a snapshot of the payment state.","properties":{"id":{"type":"string","description":"a unique identifier for the payment"},"customer":{"description":"The Cash App user (buyer)","$ref":"#/components/schemas/Customer"},"merchant":{"description":"The merchant involved in the transaction.\nNOTE: Only the merchant id will be populated.","$ref":"#/components/schemas/Merchant"},"amount":{"type":"integer","description":"Smallest divisible unit of currency for a given locale, scaled by the default number of decimal places for the currency.\nExample: 1.00 USD -> 100"},"currency":{"type":"string","description":"The ISO-4217 alpha-3 code for the payment currency"},"state":{"type":"string","description":"The state of this payment.\nOptions include AUTHORIZED, CAPTURED, VOIDED, DECLINED","enum":["AUTHORIZED","CAPTURED","VOIDED","DECLINED"]},"refunded_amount":{"type":"integer","description":"The total amount (in the currency of the payment) of all authorized refunds related to this payment."},"refunds":{"type":"array","description":"A set of refunds associated to this payment.","items":{"$ref":"#/components/schemas/Refund"}}}},"CustomerResponse":{"type":"object","properties":{"customer":{"$ref":"#/components/schemas/Customer"}}},"MerchantRequest":{"type":"object","properties":{"merchant":{"$ref":"#/components/schemas/Merchant"}}},"MerchantResponse":{"type":"object","properties":{"merchant":{"$ref":"#/components/schemas/Merchant"}}},"Scope":{"type":"object","properties":{"scope":{"type":"string","description":"The scope type (eg. PAYMENT)"},"data":{"type":"object","description":"Any additional context for the scope","additionalProperties":true}}},"AuthorizationRequest":{"type":"object","required":["scopes"],"properties":{"scopes":{"type":"array","description":"A list of [scopes](doc:scopes) requested from the customer","items":{"$ref":"#/components/schemas/Scope"}},"state":{"type":"string","description":"An opaque value used by the client to maintain state between request and callback."},"customer_descriptor":{"type":"string","description":"A short descriptor visible in Cash App for \"$Cashtag on File\" experiences"},"redirect_url":{"type":"string","description":"A uri used to redirect the customer's user-agent after the customer approves or denies the app integration."}}},"AccessTokenRequest":{"type":"object","required":["scopes"],"properties":{"scopes":{"type":"array","description":"The permissions being requested on the access-token for use by the application. This must be a subset of the scopes requested in during authorization.","items":{"$ref":"#/components/schemas/Scope"}},"authorization_code":{"type":"string","description":"A temporary authorization grant, used to exchange for an access and refresh token. NOTE: Cannot be combined with `refresh_token`"},"refresh_token":{"type":"string","description":"A permanent, revokable authorization grant, used to generate refresh tokens without customer intervention. NOTE: Cannot be combined with `authorization_code`"}}},"AuthorizationResponse":{"type":"object","properties":{"redirect_url":{"type":"string","description":"A Cash url to redirect the customer to the Application approval flow."},"qr_url":{"type":"string","description":"A Cash URL used to render a QR code image (PNG format)"},"expires_in":{"type":"integer","nullable":true,"description":"The lifetime  of this authorization flow in seconds. Null indicates that it does not expire."}}},"AccessTokenResponse":{"type":"object","properties":{"customer_id":{"type":"string","description":"An auto-generated id to represent the newly authorized customer."},"refresh_token":{"type":"string","description":"A long-lived resource credential that can be used to obtain new access tokens. [RFC-6749](https://tools.ietf.org/html/rfc6749#section-1.5)"},"access_token":{"type":"string","description":"A short-lived authentication token that will authorize actions taken on a resource based on the scopes granted by the resource owner. [RFC-6749](https://tools.ietf.org/html/rfc6749#section-1.4)"},"expires_in":{"type":"integer","description":"The expiry duration of the access token (in seconds)"}}},"CapturePaymentResponse":{"type":"object","properties":{"payment":{"$ref":"#/components/schemas/Payment"}}},"CreatePaymentRequest":{"type":"object","required":["request_id","merchant","amount","currency","capture"],"properties":{"request_id":{"type":"string","description":"a unique identifier used for processing idempotent retries"},"merchant":{"$ref":"#/components/schemas/Merchant"},"amount":{"type":"integer","format":"int64","description":"the amount of of currency in the smallest-denomination unit available. (ex. amount = 100 for $1 USD, where the smallest unit is a cent)"},"currency":{"type":"string","description":"the currency code (3 digit format from ISO 4217)"},"capture":{"type":"boolean","description":"should the payment automatically capture after authorizing"}}},"CreatePaymentResponse":{"type":"object","properties":{"payment":{"description":"A Payment object, defined in the Domain Objects section of this document.\nNOTE: the domain object will only populate data based on the scopes the customer has authorized.","$ref":"#/components/schemas/Payment"}}},"GetPaymentResponse":{"type":"object","properties":{"payment":{"description":"A Payment object, defined in the Domain Objects section of this document.\nNOTE: the domain object will only populate data based on the scopes the customer has authorized.","$ref":"#/components/schemas/Payment"}}},"RefundPaymentRequest":{"type":"object","required":["request_id","payment_id"],"properties":{"request_id":{"type":"string","description":"a unique identifier used for processing idempotent retries"},"payment_id":{"type":"string","description":"a payment id (or the original request_id of the payment)"}}},"RefundPaymentResponse":{"type":"object","properties":{"payment":{"description":"A Payment object, defined in the Domain Objects section of this document.\nNOTE: the domain object will only populate data based on the scopes the customer has authorized.","$ref":"#/components/schemas/Payment"}}}}},"tags":[{"name":"Client","description":"Client"},{"name":"Merchant Management","description":"Merchant Management"},{"name":"Customer OAuth","description":"Customer OAuth"},{"name":"Payment Processing","description":"Payment Processing"}],"externalDocs":{"description":"Find out more about Swagger","url":"http://swagger.io"}}
